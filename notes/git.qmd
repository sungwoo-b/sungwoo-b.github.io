---
title: "Git Cheat Sheet"
subtitle: "Git Commands & GitHub Workflow"
description: "A quick reference to essential Git commands and workflows"
date: 2024-03-07
categories: ["Git"]
tags: ["Git", "GitHub","SSH"]
author: "Sung Woo Bak"
draft: false
image: "../img/git.png"
layout: "article"
toc: true
slug: "git-cheatsheet"
keywords: ["Git", "GitHub", "SSH"]
---

Referenced from [GitHub Education](https://education.github.com/git-cheat-sheet-education.pdf)

# Git

### 1. Setup

- **`git config --global user.name "Firstname Lastname"`**
  - Set a name
  - Example: `git config --global user.name "Sung Woo Bak"`

- **`git config --global user.email “email address”`**
  - Set an email

### 2. **Basic Git Commands**

- **`git init`**
  - Initialize a new Git repository

- **`git clone url`**
  - Retrieve an entire repository from a hosted location via URL
  - Example: `git clone https://github.com/sungwoo-b/repository.git`

- **`git status`**
  - Show modified files in working directory, staged for your next commit

- **`git add file_name`**
  - add a file as it looks now to your next commit (stage)
  - Example: `git add file.txt`
  - To add all files: `git add .`

- **`git reset file_name`**
  - Unstage a file while retaining the changes in working directory

- **`git commit -m "commit message"`**
  - Saves the changes to the repository with a descriptive message

- **`git push alias branch`**
  - Upload the changes to the remote repository
  - Example: `git push origin main`

- **`git pull`**
  - Download the latest changes and merges them into your local branch
  - Example: `git pull`

### 3. **Branch**

- **`git branch`**
  - Display a list of branches

- **`git branch branch_name`**
  - Create a new branch at the current commit

- **`git checkout branch`**
  - Change the current working branch
  - Example: `git checkout another_branch`

- **`git log`**
  - show all commits in the current branch’s history

### 4. **Remote Repository Commands**

- **`git remote add <name> <url>`**: Adds a remote repository.
  - Links a remote repository with a name (e.g., origin) and URL.
  - Example: `git remote add origin https://github.com/user/repository.git`

- **`git remote -v`**: Shows the remote repository URLs.
  - Displays the URLs of the remote repositories connected to your local repository.

### Example

```
cd working_dir
git pull
git status
git add .
git commit -m "commit message"
git push origin main
```



# SSH

Referenced from [GitHub Docs](https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent)

Using Git Bash

**1. Generate SSH key**

`ssh-keygen -t ed25519-sk -C "your_email@example.com"`

**2. Add Passphrase**

**3. Copy Public key**

`clip < ~/.ssh/id_ed25519.pub`

**4. Add to GitHub**

Settings - Add new SSH key



